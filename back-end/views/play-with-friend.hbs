<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chơi Cờ Caro Cùng Bạn</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen flex items-center justify-center p-4">
  <div class="bg-white p-8 rounded-xl shadow-2xl w-full max-w-md">
    <h1 class="text-3xl font-bold text-center text-gray-800 mb-8">Chơi Cờ Caro Cùng Bạn</h1>
    
    <div class="space-y-4">
      <!-- Nút tạo phòng -->
      <button id="createRoomBtn" 
              class="block w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200 font-medium text-center">
        Tạo phòng mới
      </button>

      <!-- Form nhập mã phòng -->
      <form id="joinRoomForm" class="space-y-4">
        <div>
          <label for="roomCode" class="block text-sm font-medium text-gray-700 mb-2">Nhập mã phòng</label>
          <input type="text" 
                 id="roomCode" 
                 name="roomCode" 
                 class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500"
                 placeholder="Nhập mã phòng của bạn"
                 required>
        </div>
        <button type="submit" 
                class="w-full px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition duration-200 font-medium">
          Vào phòng của bạn
        </button>
      </form>

      <!-- Phần hiển thị khi đang chờ -->
      <div id="waitingSection" class="hidden">
        <div class="bg-blue-50 p-4 rounded-lg mb-4">
          <p class="text-sm text-gray-600 mb-2">Mã phòng của bạn:</p>
          <div class="flex items-center justify-between">
            <span id="roomCodeDisplay" class="text-2xl font-bold text-blue-600"></span>
            <button id="cancelRoomBtn" 
                    class="px-4 py-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200 transition duration-200">
              Hủy phòng
            </button>
          </div>
          <div class="mt-4 flex items-center justify-center">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
            <p class="text-sm text-gray-500 ml-2">Đang chờ người chơi tham gia...</p>
          </div>
        </div>
      </div>

      <!-- Nút quay lại -->
      <a href="/games/caro" 
         class="block w-full px-6 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition duration-200 font-medium text-center">
        Quay lại
      </a>
    </div>
  </div>

  <script>
    // Khởi tạo socket connection
    const socket = io('http://localhost:3000');
    let currentRoomCode = null;

    // Kiểm tra session
    const currentPlayer = '{{currentPlayerName}}';
    if (!currentPlayer) {
      alert('Vui lòng đăng nhập để chơi game');
      window.location.href = '/login';
    }

    // Xử lý tạo phòng
    document.getElementById('createRoomBtn').addEventListener('click', () => {
      // Ẩn nút tạo phòng và form nhập mã
      document.getElementById('createRoomBtn').classList.add('hidden');
      document.getElementById('joinRoomForm').classList.add('hidden');
      
      // Hiển thị phần chờ
      document.getElementById('waitingSection').classList.remove('hidden');
      
      // Gửi yêu cầu tạo phòng
      socket.emit('createRoom', { playerName: currentPlayer });
    });

    // Xử lý nhập mã phòng
    document.getElementById('joinRoomForm').addEventListener('submit', (e) => {
      e.preventDefault();
      const roomCode = document.getElementById('roomCode').value;
      socket.emit('joinRoom', { 
        roomCode, 
        playerName: currentPlayer 
      });
    });

    // Xử lý hủy phòng
    document.getElementById('cancelRoomBtn').addEventListener('click', () => {
      if (currentRoomCode) {
        socket.emit('cancelRoom', { roomCode: currentRoomCode });
        // Hiển thị lại nút tạo phòng và form nhập mã
        document.getElementById('createRoomBtn').classList.remove('hidden');
        document.getElementById('joinRoomForm').classList.remove('hidden');
        // Ẩn phần chờ
        document.getElementById('waitingSection').classList.add('hidden');
      }
    });

    // Lắng nghe sự kiện phòng được tạo
    socket.on('roomCreated', (data) => {
      currentRoomCode = data.roomCode;
      document.getElementById('roomCodeDisplay').textContent = data.roomCode;
    });

    // Lắng nghe sự kiện game bắt đầu
    socket.on('gameStarted', (data) => {
      window.location.href = `/games/caro/${data.gameId}`;
    });

    // Lắng nghe sự kiện phòng bị hủy
    socket.on('roomCancelled', () => {
      currentRoomCode = null;
      // Hiển thị lại nút tạo phòng và form nhập mã
      document.getElementById('createRoomBtn').classList.remove('hidden');
      document.getElementById('joinRoomForm').classList.remove('hidden');
      // Ẩn phần chờ
      document.getElementById('waitingSection').classList.add('hidden');
    });

    // Lắng nghe sự kiện phòng hết hạn
    socket.on('roomExpired', () => {
      currentRoomCode = null;
      // Hiển thị lại nút tạo phòng và form nhập mã
      document.getElementById('createRoomBtn').classList.remove('hidden');
      document.getElementById('joinRoomForm').classList.remove('hidden');
      // Ẩn phần chờ
      document.getElementById('waitingSection').classList.add('hidden');
      alert('Phòng đã hết hạn');
    });

    // Lắng nghe lỗi
    socket.on('error', (data) => {
      alert(data.message);
      // Hiển thị lại nút tạo phòng và form nhập mã
      document.getElementById('createRoomBtn').classList.remove('hidden');
      document.getElementById('joinRoomForm').classList.remove('hidden');
      // Ẩn phần chờ
      document.getElementById('waitingSection').classList.add('hidden');
    });
  </script>
</body>
</html>